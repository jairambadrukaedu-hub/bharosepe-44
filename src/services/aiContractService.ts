export interface ContractGenerationParams {
  transactionType: 'goods' | 'services';
  amount: number;
  sellerName: string;
  buyerName: string;
  sellerPhone: string;
  buyerPhone: string;
  productName?: string;
  serviceDescription?: string;
  deliveryDate?: string;
  completionDate?: string;
  quantity?: string;
  location?: string;
  customLocation?: string;
  warranty?: string;
  returnPolicy?: string;
  specialTerms?: string;
}

export interface GeneratedContract {
  content: string;
  clauses: string[];
  riskAssessment: string;
  suggestions: string[];
}

export class AIContractService {
  private static readonly OPENAI_API_URL = 'https://api.openai.ai/v1/chat/completions';
  private static readonly ANTHROPIC_API_URL = 'https://api.anthropic.com/v1/messages';
  
  // For demo purposes, we'll use a sophisticated template system
  // In production, you'd integrate with actual AI services
  static async generateContract(params: ContractGenerationParams): Promise<GeneratedContract> {
    // Simulate AI processing time
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    const contract = this.generateAdvancedContract(params);
    const clauses = this.generateSmartClauses(params);
    const riskAssessment = this.assessContractRisk(params);
    const suggestions = this.generateSuggestions(params);
    
    return {
      content: contract,
      clauses,
      riskAssessment,
      suggestions
    };
  }

  private static generateAdvancedContract(params: ContractGenerationParams): string {
    const isGoods = params.transactionType === 'goods';
    const currentDate = new Date().toLocaleDateString('en-IN');
    const agreementId = `AGR-${Date.now()}`;
    
    const escrowClause = this.generateEscrowClause(params.amount);
    const specificTerms = isGoods ? 
      this.generateGoodsSpecificTerms(params) : 
      this.generateServicesSpecificTerms(params);
    const paymentTerms = this.generatePaymentTerms(params);
    const disputeClause = this.generateDisputeClause(params);
    
    return `
# BHAROSE PE DIGITAL ESCROW AGREEMENT

**Agreement ID**: ${agreementId}  
**Date of Creation**: ${currentDate}  
**Generated by**: Bharose Pe AI Legal Assistant  

---

## PARTIES TO THE AGREEMENT

**SELLER (First Party)**  
Name: ${params.sellerName}  
Contact: ${params.sellerPhone}  
Role: Provider of ${isGoods ? 'goods' : 'services'}  

**BUYER (Second Party)**  
Name: ${params.buyerName}  
Contact: ${params.buyerPhone}  
Role: Recipient of ${isGoods ? 'goods' : 'services'}  

---

## TRANSACTION OVERVIEW

**Transaction Type**: ${isGoods ? 'Sale of Goods' : 'Service Agreement'}  
**Total Amount**: ₹${params.amount.toLocaleString('en-IN')}  
${isGoods ? `**Product**: ${params.productName || 'As specified'}  
**Quantity**: ${params.quantity || '1 unit'}  
**Expected Delivery**: ${params.deliveryDate ? new Date(params.deliveryDate).toLocaleDateString('en-IN') : 'As agreed'}` :
`**Service**: ${params.serviceDescription || 'As detailed'}  
**Completion Date**: ${params.completionDate ? new Date(params.completionDate).toLocaleDateString('en-IN') : 'As agreed'}  
**Service Location**: ${params.location === 'custom' ? params.customLocation : params.location || 'As specified'}`}

---

## ESCROW TERMS & CONDITIONS

${escrowClause}

---

## SPECIFIC TERMS

${specificTerms}

---

## PAYMENT TERMS

${paymentTerms}

---

## DISPUTE RESOLUTION

${disputeClause}

---

## CANCELLATION & REFUND POLICY

### Pre-Commencement Cancellation
- Either party may cancel this agreement with 24 hours written notice before ${isGoods ? 'shipping/dispatch' : 'service commencement'}
- Full refund will be processed within 3-5 business days
- No cancellation charges applicable

### Post-Commencement Cancellation
${isGoods ? 
`- Cancellation after dispatch subject to return shipping costs
- Goods must be returned in original condition
- Refund processed after quality inspection` :
`- Cancellation after service commencement based on work completed
- Payment released proportional to verified completion percentage
- Minimum 25% payment retained for initiated services`}

---

## LEGAL COMPLIANCE & JURISDICTION

1. **Governing Law**: This agreement shall be governed by the laws of India
2. **Digital Signatures**: Legally binding under Information Technology Act, 2000
3. **Jurisdiction**: Courts in Mumbai, Maharashtra shall have exclusive jurisdiction
4. **Consumer Protection**: Subject to Consumer Protection Act, 2019 where applicable
5. **Data Protection**: Personal data handled as per Digital Personal Data Protection Act, 2023

---

## FORCE MAJEURE

Neither party shall be liable for delays or failures due to circumstances beyond reasonable control, including but not limited to:
- Natural disasters, pandemics, government actions
- Technical failures, internet outages
- Transportation strikes or delays

---

## ADDITIONAL TERMS

${params.specialTerms ? `**Special Terms**: ${params.specialTerms}` : ''}
${params.warranty ? `**Warranty**: ${params.warranty}` : ''}
${params.returnPolicy ? `**Return Policy**: ${params.returnPolicy}` : ''}

---

## ACCEPTANCE & EXECUTION

By accepting this agreement digitally, both parties confirm:
- They have read and understood all terms
- They have authority to enter into this agreement  
- All information provided is accurate and complete
- They agree to be bound by these terms and conditions

**Digital Signature Authentication**: Bharose Pe OTP Verification  
**Timestamp**: ${new Date().toISOString()}  

---

*This AI-generated agreement incorporates standard legal provisions and transaction-specific terms. Both parties are advised to review all clauses carefully before acceptance. For complex transactions, additional legal consultation is recommended.*

**Bharose Pe Escrow Services Pvt. Ltd.**  
*Secure Digital Transactions Made Simple*
    `.trim();
  }

  private static generateEscrowClause(amount: number): string {
    const riskLevel = amount > 100000 ? 'high' : amount > 25000 ? 'medium' : 'low';
    
    return `
### Escrow Protection Mechanism
1. **Fund Security**: Total amount of ₹${amount.toLocaleString('en-IN')} will be held in Bharose Pe's secure escrow account
2. **Release Trigger**: Funds released only upon successful completion and buyer confirmation
3. **Inspection Period**: ${riskLevel === 'high' ? '7 business days' : riskLevel === 'medium' ? '5 business days' : '3 business days'} for review
4. **Multi-level Verification**: ${riskLevel === 'high' ? 'Enhanced KYC and transaction monitoring' : 'Standard verification process'}
5. **Insurance Coverage**: Transactions above ₹50,000 covered under Bharose Pe protection policy
    `.trim();
  }

  private static generateGoodsSpecificTerms(params: ContractGenerationParams): string {
    return `
### GOODS DELIVERY & QUALITY TERMS

#### Delivery Obligations
- Seller must ship/deliver goods within 24-48 hours of payment confirmation
- Proper packaging required to prevent damage during transit
- Tracking details to be shared with buyer immediately upon dispatch
- Delivery must be completed by ${params.deliveryDate ? new Date(params.deliveryDate).toLocaleDateString('en-IN') : 'agreed date'}

#### Quality Assurance
- Goods must exactly match description, images, and specifications provided
- All accessories, documentation, and original packaging must be included
- For electronics: IMEI/Serial numbers must match pre-purchase verification
- Authenticity guarantee with return option if goods prove counterfeit

#### Inspection Rights
- Buyer has right to inspect goods upon delivery
- Any defects or discrepancies must be reported within inspection period
- Seller responsible for replacement/refund if goods don't meet specifications
- Return shipping costs borne by seller for non-conforming goods
    `.trim();
  }

  private static generateServicesSpecificTerms(params: ContractGenerationParams): string {
    return `
### SERVICE DELIVERY & QUALITY TERMS

#### Service Obligations  
- Service provider must commence work within 24 hours of payment confirmation
- Regular progress updates to be provided to client
- Service must be completed by ${params.completionDate ? new Date(params.completionDate).toLocaleDateString('en-IN') : 'agreed date'}
- All work must meet professional industry standards

#### Scope & Deliverables
- Service includes: ${params.serviceDescription || 'As detailed in communications'}
- Deliverables to be provided in agreed format and quality
- Up to 2 rounds of reasonable revisions included
- Additional work outside scope requires separate agreement and payment

#### Quality Standards
- Work must meet specifications agreed upon before commencement  
- Professional standards and best practices must be followed
- Client has right to request corrections for work not meeting specifications
- Intellectual property rights transferred upon final payment release
    `.trim();
  }

  private static generatePaymentTerms(params: ContractGenerationParams): string {
    const milestones = params.amount > 50000 ? 
      'Payment may be released in milestones for high-value transactions' :
      'Single payment release upon completion';
      
    return `
### Payment Schedule & Terms
1. **Escrow Deposit**: Full payment deposited in escrow before service/delivery commencement
2. **Release Mechanism**: ${milestones}
3. **Processing Time**: 2-3 business days for fund release after confirmation
4. **Transaction Fees**: As per Bharose Pe fee structure (disclosed upfront)
5. **Refund Processing**: 3-5 business days for approved refunds
6. **Currency**: All amounts in Indian Rupees (INR)
    `.trim();
  }

  private static generateDisputeClause(params: ContractGenerationParams): string {
    return `
### Dispute Resolution Mechanism
1. **Primary Resolution**: Good faith negotiation between parties (7 days)
2. **Bharose Pe Mediation**: Platform-assisted mediation with dedicated resolution team
3. **Evidence Submission**: Both parties may submit supporting documents/communications
4. **Expert Opinion**: Technical experts may be consulted for complex disputes
5. **Final Decision**: Bharose Pe reserves right to make binding decisions in unresolved disputes
6. **Fund Protection**: Disputed amounts remain in escrow until resolution
7. **Appeal Process**: 48-hour window for appealing resolution decisions
    `.trim();
  }

  private static generateSmartClauses(params: ContractGenerationParams): string[] {
    const clauses = [
      "Bharose Pe Escrow Protection",
      "Digital Signature Authentication",
      "Quality Assurance Guarantee",
      "Dispute Resolution Mechanism"
    ];

    if (params.amount > 50000) {
      clauses.push("Enhanced KYC Verification", "Insurance Coverage");
    }

    if (params.transactionType === 'goods') {
      clauses.push("Delivery Tracking", "Return & Refund Rights");
    } else {
      clauses.push("Service Milestone Tracking", "Revision Rights");
    }

    return clauses;
  }

  private static assessContractRisk(params: ContractGenerationParams): string {
    const riskFactors = [];
    
    if (params.amount > 100000) {
      riskFactors.push("High-value transaction requires enhanced verification");
    }
    
    if (!params.deliveryDate && !params.completionDate) {
      riskFactors.push("Consider setting specific completion timeline");
    }
    
    if (params.transactionType === 'services' && !params.serviceDescription) {
      riskFactors.push("Detailed service description recommended");
    }

    return riskFactors.length > 0 ? 
      `Medium Risk: ${riskFactors.join(', ')}` : 
      "Low Risk: Well-structured transaction with standard terms";
  }

  private static generateSuggestions(params: ContractGenerationParams): string[] {
    const suggestions = [];
    
    if (params.amount > 25000) {
      suggestions.push("Consider insurance coverage for high-value transactions");
    }
    
    if (params.transactionType === 'goods' && !params.warranty) {
      suggestions.push("Add warranty terms for better buyer protection");
    }
    
    if (!params.specialTerms) {
      suggestions.push("Add any specific terms or conditions unique to this transaction");
    }
    
    suggestions.push("Review all terms carefully before final acceptance");
    suggestions.push("Save a copy of this agreement for your records");
    
    return suggestions;
  }

  // Future: Real AI integration methods
  static async generateWithOpenAI(params: ContractGenerationParams, apiKey: string): Promise<string> {
    // Implementation for OpenAI integration
    throw new Error("OpenAI integration not yet implemented");
  }

  static async generateWithClaude(params: ContractGenerationParams, apiKey: string): Promise<string> {
    // Implementation for Anthropic Claude integration  
    throw new Error("Claude integration not yet implemented");
  }
}